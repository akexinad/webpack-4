NOTE ON SECTIONS FOLDER
=======================

- The sections 1 to 6 folder also contains example from last video from section 7 on rendering multiple html pages with express.




STARTING OFF
============

- To begin, we need to create a webpack.config.js file and give four options:
    1. Entry Point for all the files.
    2. Output.
        - NOTE: The output path folder has to be in absolute, not relative.
    3. Mode.
    4. PublicPath.
        - This tells webpack where all the generated files are located.
        - In prod, the publicPath becomes the URL with a / at the end since is concatenates all the files together.

- And in our package.json file we prep the build script.




LOADERS
=======

- Rememeber that loaders have to be installed via npm.
- NOTE that webpack loads the loaders from right to left.
    - Start off with the more general loader and end with the most specific loader.




PLUGINS
=======

- Plugins are additional javascript files that do evertyhing that loaders cannot do.
- Plugins can also modify how the bundles themsleves are created. For example, uglifyJSPlusgin takes the bundle.js and minimizes the contents to decrease the bundle size.
- ALL PLUGINS SHOULD BE ONLY SAVED AS DEVLEOPMEMT DEPENDENCIES




THE MODE OPTION
===============

- The option allows for certain built-in optimizations.
- Mode can be set to:
    - none.
    - development.
    - production.
- Remember to check webpack documentation for more information.

- When debugging production code. It's better and easier to debug the same code in development mode so you can see exactly where the issue is since development mode uses source maps by default.




PROD AND DEV MANAGEMENT
=======================

- Make to separate webpack config files as well as package.json scripts for dev and prod respectively.




CUSTOM OPTIONS FOR CODE SPLITTING
=================================

- If the dependncy is less than 30kb, webpack will not produce a separate vendor bundle file for it in the dist folder.
- This is why you get a separate vendor bundle file when you use a dependency like lodash but not React.
- This is where we will need custom configurations in order to tell webpack when to make this vendor file.